{"version":3,"sources":["componentes/Pelicula.js","App.js","reportWebVitals.js","index.js"],"names":["Pelicula","_useHarperDB","useHarperDB","query","operation","sql","interval","_useHarperDB2","Object","slicedToArray","data","loading","error","refresh","react_default","a","createElement","aleatorio","Math","floor","random","className","title","rating","date","hours","minutes","alt","src","cover","genres","map","genero","index","key","description","writers","escritores","directors","directores","href","website","onClick","App","componentes_Pelicula","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","url","process","user","password","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f4a2325d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHarperDB } from \"use-harperdb\"\r\n\r\nfunction Pelicula(){\r\n    // Llamada a hook use-harperdb\r\n\r\n    const [data, loading, error, refresh] = useHarperDB(\r\n        {\r\n            query: {\r\n                operation:'sql',\r\n                sql: \"select * from coleccion.pelicula\"\r\n            },\r\n            interval: 40000  // 40 segundos\r\n        }\r\n    );\r\n\r\n    // renderizado cuando está cargando la data\r\n    if(loading){\r\n        return(<div>Cargando...</div>)\r\n    }\r\n\r\n    // Renderizado en caso de obtener la data\r\n    if(data){\r\n\r\n        // Acá obtiene una película de forma aleatoria en báse al índice del array\r\n        const aleatorio = Math.floor(Math.random()*6+1);\r\n\r\n        return(<div className=\"carga\">\r\n            {/* Portada */}\r\n            <div className=\"portada-pelicula\">\r\n                <div className=\"info-arriba\">\r\n                    <h2 className=\"titulo\">{data[aleatorio].title}</h2>\r\n                    <div className=\"circulo\">\r\n                        <div className=\"ratings\">\r\n                            <span className=\"mitad-grande\">{data[aleatorio].rating}</span>/<span className=\"mitad-pequena\">10</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"info-soporte\">\r\n                    <span className=\"año\">{data[aleatorio].date}</span> -\r\n                    <span className=\"duracion\"> Duración {data[aleatorio].hours}h:{data[aleatorio].minutes}m</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"imagen\">\r\n                <img alt=\"Portada Pelicula\" src={data[aleatorio].cover} />\r\n            </div>\r\n\r\n            <div className=\"generos\">\r\n                <ul className=\"generos-pelicula\">\r\n                    {data[aleatorio].genres.map((genero,index)=>{\r\n                        return(\r\n                            <li key={index}><span className=\"generos-pelicula-item\">{genero}</span></li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"info-abajo\">\r\n                <p>{data[aleatorio].description}</p>\r\n\r\n                <hr />\r\n                <p className=\"autores\">Escritores:\r\n                    {data[aleatorio].writers.map((escritores,index) =>{\r\n                        return(\r\n                            <span key={index} className=\"escritores\">{escritores}</span>\r\n                            )\r\n                        } )}\r\n                </p>\r\n                <p className=\"autores\">Director/es:\r\n                    {data[aleatorio].directors.map((directores,index)=>{\r\n                        return(\r\n                            <span key={index} className=\"directores\">{directores}</span>\r\n                        )\r\n                    })}\r\n                </p>\r\n                <hr />\r\n                <div className=\"btn-accion\">\r\n                    <a className=\"btn-visita-pelicula\" href={data[aleatorio].website}>Mira en IDBM</a>\r\n                    <a className=\"btn-generar-pelicula\" href=\"\" onClick={refresh}>Otra Pelicula</a>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    // Renderizado en caso de error de conexión\r\n    if(error){\r\n        return(<div className=\"\">Lo sentimos, no encontramos la información {error}</div>)\r\n    }\r\n}\r\n\r\nexport default Pelicula;\r\n","import './App.css';\nimport React from 'react'\nimport Pelicula from './componentes/Pelicula'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"contenedor-principal\">\n      <header>\n        <h1 className=\"heading\">Lista de películas</h1>\n        <h3>Un simple generador de películas hecho con React y HarperDB</h3>\n      </header>\n      <div>\n        <Pelicula />\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';  // Línea modificada\nimport './index.css';\nimport App from './App';\nimport { HarperDBProvider } from 'use-harperdb/useHarperDB';\nimport reportWebVitals from './reportWebVitals';\n\n\n// Renderizado en DOM\nReactDOM.render(\n  <React.StrictMode>\n    <HarperDBProvider\n    url={process.env.REACT_APP_DB_URL}\n    user={process.env.REACT_APP_USER}\n    password={process.env.REACT_APP_PASSWORD}\n    >\n      <App />\n    </HarperDBProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}